name: CI/CD Rust Arch Install

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Remove manually installed tools
      run: |
        rm -f /home/runner/.cargo/bin/rust-analyzer
        rm -f /home/runner/.cargo/bin/rustfmt
        rm -f /home/runner/.cargo/bin/cargo-fmt

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Install rust-analyzer, rustfmt, and cargo-fmt
      run: |
        rustup component add rust-analyzer
        rustup component add rustfmt
        rustup component add clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Build project
      run: cargo build --release

    - name: Run tests
      run: cargo test

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

    - name: Build Docker image
      env:
        DOCKER_BUILDKIT: 1
      run: |
        docker build . -t ${{ secrets.DOCKER_USERNAME }}/rustinstallarch:latest

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/rustinstallarch:latest
